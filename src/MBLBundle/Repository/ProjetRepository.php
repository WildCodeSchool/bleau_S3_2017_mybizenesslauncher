<?php

namespace MBLBundle\Repository;

/**
 * ProjetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetRepository extends \Doctrine\ORM\EntityRepository
{
    public function findLastProjets4()
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->setMaxResults(4)
            ->getQuery()
            ->getResult()
            ;// TODO: Change the autogenerated stub
    }

    public function findAllDesc()
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->getQuery()
            ->getResult()
            ;// TODO: Change the autogenerated stub
    }

    public function findAllMyProjects($profilId)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.profils', 'pp')
            ->where('pp.id = :profilId')
            ->setParameter('profilId', $profilId)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindBySecteur($secteur)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.secteur', 'pp')
            ->where('pp.id = :secteurId')
            ->setParameter('secteurId', $secteur)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindBySecteurLoc($secteur, $Loc)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.secteur', 'pp')
            ->where('pp.id = :secteurId')
            ->setParameter('secteurId', $secteur)
            ->andwhere('p.localisation = :loca')
            ->setParameter('loca', $Loc)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypeDeProjet($typeDeProjet)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'pp')
            ->where('pp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $typeDeProjet)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypeDeProjetLoc($typeDeProjet, $Loc)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'pp')
            ->where('pp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $typeDeProjet)
            ->andwhere('p.localisation = :locat')
            ->setParameter('locat', $Loc)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypEtSec($idSec, $idTyp)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'ptyp')
            ->join('p.secteur', 'psec')
            ->where('ptyp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $idTyp)
            ->andWhere('psec.id = :secteurId')
            ->setParameter('secteurId', $idSec)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypSecloc($idSec, $idTyp, $Loc)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'ptyp')
            ->join('p.secteur', 'psec')
            ->where('ptyp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $idTyp)
            ->andWhere('psec.id = :secteurId')
            ->setParameter('secteurId', $idSec)
            ->andWhere('p.localisation = :loc')
            ->setParameter('loc', $Loc)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
}

